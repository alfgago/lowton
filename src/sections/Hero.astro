---
interface Props {
	title: string;
	className?: string;
	textClass?: string;
}

const { title, className, textClass } = Astro.props;
---

<section id="hero" class="px-8 lg:px-16">
	<div
		class:list={[
			className,
			"grid items-center lg:items-end lg:pb-10 mx-auto lg:grid-cols-12 grid-cols-6 select-none hh border-b border-[var(--color-primary)]",
		]}
	>
		<div class="col-span-6 lg:col-span-11">
			<h1
				class:list={[
					textClass,
					"block overflow-hidden text-[9.5vw] sm:text-[7vw] md:text-[6vw] md:text-wrap uppercase text-balance font-medium leading-none text-white data-cursor tracking-tight",
				]}
			>
				{title}
			</h1>
		</div>
	</div>

	<style>
		.hh {
			height: calc(100dvh - 70px);
		}
	</style>
</section>

<script>
	import SplitType from "split-type";
	import { gsap } from "gsap";

	const splitText = document.querySelectorAll<HTMLElement>(".tracking-tight");

	splitText.forEach((word) => {
		const text = new SplitType(word, { types: "words" });

		// Wrap each word in a span with overflow-hidden
		text.words?.forEach((word) => {
			const span = document.createElement("span");
			span.style.display = "inline-block"; // Maintain inline display
			span.classList.add("overflow-hidden");
			word.parentNode?.insertBefore(span, word);
			span.appendChild(word);
		});

		gsap.from(text.words, {
			yPercent: 130,
			stagger: 0.05,
			ease: "back.out",
			duration: 1,
		});
	});
</script>
