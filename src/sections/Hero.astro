---
interface Props {
	title: string;
	className?: string;
	textClass?: string;
}

const { title, className, textClass } = Astro.props;
---

<section id="hero" class="px-8 lg:px-16">
	<div
		class:list={[
			className,
			"grid items-center lg:items-end mx-auto lg:grid-cols-12 grid-cols-6 select-none hh",
		]}>
		<div class="col-span-6 lg:col-span-9">
			<h1
				class:list={[
					textClass,
					"block overflow-hidden text-[9.5vw] sm:text-[7vw] md:text-[6vw] md:text-wrap capitalize text-balance font-medium leading-none text-white data-cursor tracking-tight",
				]}>
				{title}
			</h1>
		</div>
	</div>

	<style>
		.hh {
			height: calc(100dvh - 70px);
		}

		#hero {
			position: sticky;
			top: 0;
		}
	</style>
</section>

<script>
	import SplitType from "split-type";
	import { gsap } from "gsap";
	import { $ } from "@/lib/utils";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	gsap.registerPlugin(ScrollTrigger);

	document.addEventListener("astro:page-load", () => {
		const hero = $("#hero");
		const overlap = $(".overlap");

		const splitText = document.querySelectorAll<HTMLElement>(".tracking-tight");

		splitText.forEach((word) => {
			const text = new SplitType(word, { types: "words" });

			text.words?.forEach((word) => {
				const span = document.createElement("span");
				span.style.display = "inline-block";
				span.classList.add("overflow-hidden");
				word.parentNode?.insertBefore(span, word);
				span.appendChild(word);
			});

			gsap.from(text.words, {
				yPercent: 130,
				stagger: 0.05,
				ease: "back.out",
				duration: 1,
			});
		});

		gsap.to(hero, {
			position: "relative",
			scrollTrigger: {
				trigger: overlap,
				start: "top top",
				toggleActions: "play none none reverse",
			},
		});
	});
</script>
